server:
  port: 10103
  servlet:
    context-path: /extractnews

spring:
  application:
    name: user-extract-news
#  devtools:
#    restart:
#      # 开启热部署（更改文件后，自动重启）
#      enabled: true
      ## 设置哪些资源变动后不触发热部署，会覆盖默认的exclude内容（资源不会触发重启，但会触发实时重新加载）
      # exclude: WEB-INF/**,static/**
      ## 监控额外的路径（优先于exclude）
      # additional-paths: src/main/java
  datasource:
    druid:
      db-type: com.alibaba.druid.pool.DruidDataSource
      url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:news}?serverTimezone=Asia/Shanghai&characterEncoding=utf8&useSSL=false
      username: ${DB_USER:root}
      password: ${DB_PWD:root}
      driver-class-name: com.mysql.cj.jdbc.Driver

eureka:
  client:
    registerWithEureka: true #服务注册开关
    fetchRegistry: true #服务发现开关
    serviceUrl: #Eureka客户端与Eureka服务端进行交互的地址，多个中间用逗号分隔
      defaultZone: ${EUREKA_SERVER:http://localhost:10100/eureka/}
  instance:
    prefer-ip-address:  true  #将自己的ip地址注册到Eureka服务中
    ip-address: 127.0.0.1
    instance-id: ${spring.application.name}:${server.port} #指定实例id
ribbon:
  MaxAutoRetries: 2 #最大重试次数，当Eureka中可以找到服务，但是服务连不上时将会重试，如果eureka中找不到服务则直接走断路器
  MaxAutoRetriesNextServer: 3 #切换实例的重试次数
  OkToRetryOnAllOperations: false  #对所有操作请求都进行重试，如果是get则可以，如果是post，put等操作没有实现幂等的情况下是很危险的,所以设置为false
  ConnectTimeout: 5000  #请求连接的超时时间
  ReadTimeout: 6000 #请求处理的超时时间
hystrix:
  command:
    default:
      circuitBreaker:
        requestVolumeThreshold: 10        # 熔断触发小请求次数，默认值是20
        sleepWindowInMilliseconds: 10000  # 熔断后休眠时长，默认值5秒
        errorThresholdPercentage: 50      # 触发熔断错误比例阈值，默认值50%
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 5000 # 熔断超时设置，默认为1秒
feign:
  hystrix:
    enabled: true            # 开启熔断
  #  httpclient:
  #    enabled: true
  #    connection-timeout: 2000
  client:
    config:
      default:  # 服务名称，默认指代所有服务
        connectTimeout: 2000
        readTimeout: 4000