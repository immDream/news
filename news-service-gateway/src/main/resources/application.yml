server:
  port: 10101
  servlet:
    context-path: /api

eureka:
  client:
    registerWithEureka: true #服务注册开关
    fetchRegistry: true #服务发现开关
    serviceUrl: #Eureka客户端与 Eureka服务端进行交互的地址，多个中间用逗号分隔
      defaultZone: ${EUREKA_SERVER:http://localhost:10100/eureka/}
  instance:
    prefer-ip-address:  true  #将自己的 ip地址注册到 Eureka服务中
    ip-address: 127.0.0.1
    instance-id: ${spring.application.name}:${server.port} #指定实例id

spring:
  application:
    name: news-gateway-service
  cloud:
    gateway:
      enabled: true
      routes:
        # 路径都一样则访问第一个
        - id: USER-MANAGER-SERVICE-ROUTER    # - 表示为数组
          uri: lb://USER-MANAGER-SERVICE  # 自动启动了负载均衡 lb load balance
          predicates:                 # 断言路径
            - Path=/usermanager/**
#        - id: DEMO-CONSUMER-ROUTER
#          uri: lb://DEMO-CONSUMER
#          predicates:
#            - Path=/   # 输入这个地址自动加上前缀
#          filters:
#            - PrefixPath=/consumer
#        - id: DEMO-ORDER-ROUTER
#          uri: lb://DEMO-ORDER-SERVICE
#          predicates:
#            - Path=/order/**
      # 配置多个默认的全局过滤器
      default-filters:
#        - AddResponseHeader=token, 111123123123123
        - AddResponseHeader=Content-Type, application/json

      globalcors:
        add-to-simple-url-handler-mapping: true # 解决options请求被拦截问题
        cors-configurations:  # 配置跨域请求
          '[/**]':
            allowedOrigins: '*'
            allowedMethods: # 允许的跨域ajax的请求方式 '*'
              - "GET"
              - "POST"
              - "DELETE"
              - "PUT"
              - "OPTIONS"
            allowedHeaders: "*"   # 允许在请求中携带头信息
            allowCredentials: true # 是否允许携带cookie


ribbon:
  MaxAutoRetries: 2 #最大重试次数，当Eureka中可以找到服务，但是服务连不上时将会重试，如果eureka中找不到服务则直接走断路器
  MaxAutoRetriesNextServer: 3 #切换实例的重试次数
  OkToRetryOnAllOperations: false  #对所有操作请求都进行重试，如果是get则可以，如果是post，put等操作没有实现幂等的情况下是很危险的,所以设置为false
  ConnectTimeout: 5000  #请求连接的超时时间
  ReadTimeout: 6000 #请求处理的超时时间
hystrix:
  command:
    default:
      circuitBreaker:
        requestVolumeThreshold: 10        # 熔断触发小请求次数，默认值是20
        sleepWindowInMilliseconds: 10000  # 熔断后休眠时长，默认值5秒
        errorThresholdPercentage: 50      # 触发熔断错误比例阈值，默认值50%
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 5000 # 熔断超时设置，默认为1秒
feign:
  hystrix:
    enabled: true            # 开启熔断
  #  httpclient:
  #    enabled: true
  #    connection-timeout: 2000
  client:
    config:
      default:  # 服务名称，默认指代所有服务
        connectTimeout: 2000
        readTimeout: 4000